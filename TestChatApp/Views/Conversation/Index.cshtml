@using Newtonsoft.Json
@model List<TestChatApp.ViewModels.UserViewModel>

@{
    ViewBag.Title = "Index";
}


<head>
    <link href="~/Content/Chat.css" rel="stylesheet" type="text/css">
    <style>
        .selected {
            color: black;
            background-color: #28a745;
        }
    </style>
</head>

<body>
<div class="jumbotron text-center my-0 p-3" id="jumbotronHead">
    <h2>Welcome to your dialogue page @User.Identity.Name</h2>
</div>
<hr />
    
<div class="inbox_msg">
    <div class="inbox_people">
        <div class="inbox_chat" data-bind="foreach: jsonUsers">
            <div class="chat_list" data-bind="click: $root.goToChat, css: { selected: $parent.chosenUser() && Email === $parent.chosenUser().Email }">
                <div class="chat_people">
                    <div class="d-none" data-bind="text: Id"></div>
                    <h5 id="userName" data-bind="text: Email"></h5>
                </div>
            </div>
        </div>
    </div>

    <div class="msgs">
        <div id="test"></div>
        <div class="partial" data-bind="visible: chosenUser()">
            @Html.Partial("_Chat")
        </div>
    </div>
</div>

</body>


@section scripts{
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        window.userName = null;
        $(function() {

        });
    </script>

    <script src="~/Scripts/knockout-3.4.2.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(function() {
            function ChatViewModel() {
                var self = this;
                self.chat = {};
                self.chosenUser = ko.observable();
                self.message = ko.observable('');
                self.chattedWithPerson = ko.observable('');
                self.jsonUsers = ko.observableArray(@Html.Raw(JsonConvert.SerializeObject(Model)));
                self.messages = ko.observableArray([]);

                self.sendMessage = function() {
                    var newMessage = { ChatMessage: self.message(), DateTime: new Date() };
                    self.messages.push(newMessage);
                    self.chat.server.sendChatMessage(window.userName, newMessage);
                    self.message('');
                    $('#message').focus();
                }

                self.initialize = function () {
                    self.startHub();
                    $('#message').focus();
                }

                self.goToChat = function(user) {
                    self.chattedWithPerson("@User.Identity.Name" + " chose chat with " + user.Email);
                    self.chosenUser(user);

                    self.messages.removeAll();

                    $.ajax({
                        url: "/Conversation/GetMessages?id=" + user.Id,
                        type: "GET",
                        success: function(data) {
                            ko.utils.arrayPushAll(self.messages, data);
                        },
                        error: function(xhr, status) {
                            alert(xhr);
                            alert(status);
                        }
                    });

                    window.userName = $(this).find('#userName').text();
                };

                self.startHub = function() {
                    self.chat = $.connection.chatHub;
                    self.chat.client.messageRecieved = function(message) {
                        self.messages.push(message);
                    };
                    $.connection.hub.start().done(function() {
                    });
                };

            }

            chatViewModel = new ChatViewModel();
            ko.applyBindings(chatViewModel);
            chatViewModel.initialize();
        });
    </script>
}